unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, DB, DBClient;

type
  TForm1 = class(TForm)
    Button1: TButton;
    ClientDataSet1: TClientDataSet;
    DataSource1: TDataSource;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    originalData: String;

    function getData(Data: String; ParseNo: Integer): String;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
  originalData := #2
                + 'DNSB01,20220520,121030,1,1612290048,1,2,0330,25-27-120,6447,3.0,1.0'
                + ',0.0,0.0,0.0,0.0,0.0'
                + ',1.0,1.0,1.0,1.0,1.0'
                + ',1000,1001,1002,2000,2001,100,101,10.5,200,201,1.02,1.04,1.06'
                + ',1000,1001,1002,2000,2001,100,101,10.5,200,201,1.02,1.04,1.06'
                + #3;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  Memo1.Text := getData(originalData, 9);
end;

{
	DNSB01		// 1  DNSB �ǳ� ID (SETUP���� ����)
	,20161229	// 2  ���� ��¥
	,121030		// 3  ���� �ð�
	,96		// 4  �� ��ġ��ȣ
	,1612290048	// 5  ���� ���� ID (���� ��Ž� ���ŵ� ID)
	,1		// 6  ���Ϻ� ��ġ ����
	,2		// 7  ���Ϻ� �� ��ġ ����
	,0330		// 8  ���� ��ȣ
	,25-27-120	// 9  ���� ��Ī
	,6447		// 10 ���� ��ȣ
	,3.0		// 11 ��ġ��(m3)
	,1.0		// 12 ��������(%)
	,0.0,0.0,2.0,1.0	// 13 *ǥ���: G1, G2, S1, S2
	,1.5,0.0,4.5,9.5	// 17 *�Ե�: G1, G2, S1, S2
	,1881,0		// 21 *������: G1, G2  (���պ�)
	,1920,1755 	// 23	      S1, S2
	,810,405.0 	// 25	      C1, C2
	,204.0,204.0 	// 27	      W1, W2
	,8.40,0.00,0.00	// 29	      A1, A2, A3
	,1850,0		// 32 *�跮��: G1, G2
	,1864,1704 	// 34	      S1, S2
	,804,396.0 	// 36	      C1, C2
	,201.0,202.0 	// 38	      W1, W2
	,8.36,0.00,0.00	// 40	      A1, A2, A3
}
function TForm1.getData(Data: String; ParseNo: Integer): String;
var strData, cutData: String;
    intPos, loop: Integer;
begin
  strData := StringReplace(Data, #2, '', [rfReplaceAll]);
  strData := StringReplace(strData, #3, '', [rfReplaceAll]);

  for loop := 1 to ParseNo do
    begin
      intPos  := Pos(',', strData);
      cutData := Copy(strData, 1, intPos);
      strData := Copy(strData, Length(cutData) + 1, Length(strData));
    end;

  Result := StringReplace(cutData, ',', '', [rfReplaceAll]);
end;

end.
